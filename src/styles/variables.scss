:root {
  --color-5: rgb(125, 125, 125);
  --color-1: rgb(60, 60, 65);
  --color-4: rgb(50, 50, 50);
  --color-2: rgb(35, 35, 39);
  --color-3: rgb(25, 25, 28);
  --color-a: rgb(255, 128, 225);
  --color-b: rgb(200, 128, 255);
  --color-c: rgb(128, 128, 255);
  --color-d: rgb(104, 182, 255);
  --color-e: rgb(73, 225, 225);
  --color-red: rgb(255, 70, 70);

  --padding-1: 1rem;
  --padding-2: 0.25rem;

  --task-svg-size: 1.25rem;
  --plus-svg-size: 1rem;

  --priority-text-gradient: linear-gradient(
    150deg,
    var(--color-a) 0%,
    var(--color-b) 25%,
    var(--color-c) 50%,
    var(--color-d) 75%,
    var(--color-e) 100%
  );

  --border-radius-1: 0.5rem;

  --shadow-1: 0 0 12px rgba(0, 0, 0, 0.6);
}
img {
  background-color: white;
}
svg {
  &.plus {
    width: var(--plus-svg-size);
    height: var(--plus-svg-size);
    border-radius: 50%;
    //background-color: var(--color-3);
  }
}
.card {
  background-color: var(--color-2);
  border-radius: var(--border-radius-1);
  box-shadow: var(--shadow-1);
}
.end-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
button {
  cursor: pointer;
  padding: 0;

  &.complete-task {
    display: flex;
    width: 1.25rem;
    height: 1.25rem;
    background-color: var(--color-3);
    border: solid 2px white;
    border-radius: 50%;
    svg {
      margin: auto;
      align-self: center;
      fill: var(--color-3);
      stroke: var(--color-3);
      stroke-width: 3px;
    }
  }
  &.complete-subtask {
    min-width: 1rem;
    height: 1rem;
    margin: 2px;
    background-color: var(--color-3);
    border: solid 2px white;
    border-radius: 50%;

    svg {
      margin: auto;
      align-self: center;
      fill: var(--color-3);
      stroke: var(--color-3);
      stroke-width: 3px;
    }
  }
  &.delete-subtask,
  &.delete-task {
    background-color: rgba($color: #000000, $alpha: 0);
    border: none;
    display: flex;
    width: 1rem;
    height: 1rem;

    svg.trash {
      margin: auto;
      height: 100%;
      fill: white;
    }
  }
}
.non-clickable {
  pointer-events: none;
}
div.priority-selector {
  span {
    text-align: center;
    font-size: 1.2rem;
    font-weight: bold;
    color: white;
  }
  button {
    box-sizing: unset;
    width: var(--task-svg-size);
    height: var(--task-svg-size);
    padding: 0.25rem;
    border: 0px;
    border-radius: var(--border-radius-1);
    background-color: rgba(#ffffff, 0);
    overflow: hidden;

    span {
      text-align: center;
      font-size: 1.2rem;
      font-weight: bold;
      color: white;
    }
  }
  div.priority-menu {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    border-radius: var(--border-radius-1);
    background-color: var(--color-2);
    box-shadow: var(--shadow-1);
    transition: transform 0.3s ease;

    &.to-bottom {
      transform: scale(0) translateY(0);
      transform-origin: top;
      &.open {
        transform: scale(1) translateY(var(--padding-2));
      }
    }
    &.to-top {
      transform: scale(0) translateY(-9.25rem);
      transform-origin: top;
      &.open {
        transform: scale(1) translateY(-9.25rem);
      }
    }

    button {
      border: none;
      border-radius: var(--border-radius-1);
      background-color: var(--color-2);
      padding: var(--padding-2);

      &:hover {
        background-color: var(--color-1);
      }
    }
  }

  border-radius: var(--border-radius-1);
  background-color: var(--color-2);
}
.for-text-gradient {
  background-size: 100%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-background-clip: text;
  -moz-text-fill-color: transparent;
}

$colors: (
  A: var(--color-a),
  B: var(--color-b),
  C: var(--color-c),
  D: var(--color-d),
  E: var(--color-e),
);
@each $class, $color in $colors {
  span.priority-level.#{$class} {
    color: $color;
  }
  .#{$class} {
    button.complete-task,
    button.complete-subtask {
      border-color: $color;
    }
    &.complete,
    .complete {
      button.complete-task,
      button.complete-subtask {
        background-color: $color;
      }
    }

    button {
      &.complete-subtask.complete {
        background-color: $color;
      }
      &.set-priority-task {
        span.priority-level {
          color: $color;
        }
      }
      svg {
        &.plus {
          stroke: $color;
        }
      }
      &.delete-subtask,
      &.delete-task {
        svg.trash {
          fill: $color;
        }
      }
    }
  }
}
